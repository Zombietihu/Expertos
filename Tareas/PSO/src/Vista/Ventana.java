/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import static java.lang.Math.pow;
import javax.swing.table.DefaultTableModel;
//import controlador.PSOcontrolador;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

/**
 *
 * @author tonny
 */
public class Ventana extends javax.swing.JFrame {

    DefaultTableModel modelo;
    DefaultTableModel modelo2;
    DefaultTableModel modelo3;
    ArrayList<ArrayList> matriz = new ArrayList();
    ArrayList<ArrayList> pobini = new ArrayList();
    ArrayList<ArrayList> pobiniAux = new ArrayList();
    ArrayList<Integer> numerobin = new ArrayList();
    ArrayList<String> caracteres = new ArrayList();
    ArrayList<String> renglonSeleccionado = new ArrayList();
    ArrayList<Integer> pesos = new ArrayList<>();
    String letras[] = {"A", "B", "C", "D", "E", "F"};
    int mayorActual = 0;
    int mayorFuturo = 0;
    int menor = 0;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jBGenerar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBCalcular = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        p1 = new javax.swing.JTextField();
        p2 = new javax.swing.JTextField();
        p3 = new javax.swing.JTextField();
        p0 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pn1 = new javax.swing.JTextField();
        pn2 = new javax.swing.JTextField();
        pn3 = new javax.swing.JTextField();
        pn4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jMaximo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMinimo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PSO");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "A", "B", "C", "D", "E", "F"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jBGenerar.setText("Generar");
        jBGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenerarActionPerformed(evt);
            }
        });

        jLabel1.setText("Matriz de adyacencia");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"0", null, null, null, null, null, null},
                {"1", null, null, null, null, null, null},
                {"2", null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Particula", "x", "x^2", "x^3", "x^4", "x^5", "x^6"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jBCalcular.setText("Maximizar");
        jBCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCalcularActionPerformed(evt);
            }
        });

        jBSalir.setText("Minimizar");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "x", "x^2", "x^3", "x^4", "x^5", "x^6"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel2.setText("Población inicial");

        jLabel3.setText("Valor");

        jLabel4.setText("Población Final");

        jLabel5.setText("Valor");

        jLabel6.setText("Maximo Valor");

        jLabel7.setText("Mínimo Valor");

        jMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMinimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(271, 271, 271)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(p0))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p3)
                                    .addComponent(p2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pn2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pn3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pn4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pn1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 2, Short.MAX_VALUE))
                                    .addComponent(p1))))
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jMaximo, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(jMinimo))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jBGenerar)
                .addGap(34, 34, 34)
                .addComponent(jBCalcular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(p0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(pn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCalcular)
                    .addComponent(jBGenerar)
                    .addComponent(jBSalir))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenerarActionPerformed
        // TODO add your handling code here:
        String cabecera[] = {" ", "A", "B", "C", "D", "E", "F"};
        String cabecera2[] = {"Particula", "x", "x^2", "x^3", "x^4", "x^5", "x^6"};
        String datos[][] = {};
        String datos2[][] = {};

        modelo = new DefaultTableModel(datos, cabecera);
        modelo2 = new DefaultTableModel(datos2, cabecera2);
        modelo3 = new DefaultTableModel(datos2, cabecera2);
        jTable2.setModel(modelo);
        jTable1.setModel(modelo2);
        jTable3.setModel(modelo3);
        llenarMatrizAdyacencia();
        mostraMatrizAdyacencia();
        llenarPoblaIni();
        mostrarPoblaIni();
        mostrarPesos();
    }//GEN-LAST:event_jBGenerarActionPerformed

    public ArrayList crearIndividuo() {
        Random dado = new Random();
        ArrayList<Integer> individuo = new ArrayList<>();
        for (int i = 0; i < 6; i++) {
            individuo.add(dado.nextInt(2));
        }
        return individuo;

    }

    public void llenarMatrizAdyacencia() {
        for (int i = 0; i < 6; i++) {
            matriz.add(crearIndividuo());
        }
    }

    public void mostraMatrizAdyacencia() {
        ArrayList<Integer> A = new ArrayList<>();
        int a, b, c, d, e, f;
        String p;

        for (int i = 0; i < 6; i++) {
            A = matriz.get(i);
            a = A.get(0);
            b = A.get(1);
            c = A.get(2);
            d = A.get(3);
            e = A.get(4);
            f = A.get(5);
            p = letras[i];

            Object datos[] = {p, a, b, c, d, e, f};
            modelo.addRow(datos);
        }
    }

    public ArrayList crearIndividuoPobIni() {
        Random dado = new Random();
        int pos = 0;
        ArrayList<String> individuo = new ArrayList<>();
        for (int i = 0; i < 6; i++) {
            pos = dado.nextInt(6);
            if (individuo.contains(letras[pos])) {
                --i;
            } else {
                individuo.add(letras[pos]);
            }

        }
        return individuo;
    }

    public void llenarPoblaIni() {
        for (int i = 0; i < 4; i++) {
            pobini.add(crearIndividuoPobIni());
        }
    }

    public void mostrarPoblaIni() {
        ArrayList<String> A = new ArrayList<>();
        String a, b, c, d, e, f;
        int p;

        for (int i = 0; i < 4; i++) {
            A = pobini.get(i);
            a = A.get(0);
            b = A.get(1);
            c = A.get(2);
            d = A.get(3);
            e = A.get(4);
            f = A.get(5);
            p = i + 1;
            System.out.println("muestro a: "+A);
            Object datos[] = {p, a, b, c, d, e, f};
            modelo2.addRow(datos);
            
        }
        pobiniAux = (ArrayList<ArrayList>) pobini.clone();
    }
    int P0=0; int P1=0;int P2=0;int P3=0;
    public void mostrarPesos(){
        ArrayList<String> Particula = new ArrayList<>();
        ArrayList<ArrayList> binario = new ArrayList<>();
        
        for (int i = 0; i<4;i++){
            Particula = pobini.get(i);
            binario.add(calcularPesosC(Particula));            
        }
        for(int i=0;i<6;i++){
            
            P0=(int) (Math.pow((double) (int)(binario.get(0).get(i))*2,i+1)+P0);
            P1=(int) (Math.pow((double) (int)(binario.get(1).get(i))*2,i+1)+P1);
            P2=(int) (Math.pow((double) (int)(binario.get(2).get(i))*2,i+1)+P2);
            P3=(int) (Math.pow((double) (int)(binario.get(3).get(i))*2,i+1)+P3);
        }
        this.p0.setText(Integer.toString(P0)); 
        this.p1.setText(Integer.toString(P1));
        this.p2.setText(Integer.toString(P2));
        this.p3.setText(Integer.toString(P3));
        mayorActual = seleccionaMayor();
    }
    
    public ArrayList<Integer> calcularPesosC(ArrayList<String> Particula){
        ArrayList<Integer> valorBinario = new ArrayList<Integer>();
        String letra;
        int posicion;
        for (int i=0;i<6;i++){
            letra = Particula.get(i);
            switch(letra){
                case "A":
                    posicion = i;
                    valorBinario.add((Integer) matriz.get(0).get(i));
                    break;
                case "B":
                    valorBinario.add((Integer) matriz.get(1).get(i));
                    break;    
                case "C":
                    valorBinario.add((Integer) matriz.get(2).get(i));
                    break;     
                case "D":
                    valorBinario.add((Integer) matriz.get(3).get(i));
                    break;
                case "E":
                    valorBinario.add((Integer) matriz.get(4).get(i));
                    break;
                case "F":
                    valorBinario.add((Integer) matriz.get(5).get(i));
                    break;     
            }
        }      
        System.out.println("Mi Valor binario es: "+ valorBinario);
        return valorBinario;
    }
   

    private void jBCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCalcularActionPerformed
        // TODO add your handling code here:
       //Maximizar
        maximiza();

    }//GEN-LAST:event_jBCalcularActionPerformed

    public void maximiza(){
        boolean cambio =true;
        int noCambio =0;
        pobini.clear();
        pobini = (ArrayList<ArrayList>) pobiniAux.clone();
        while(cambio){
            //seleccionar el nuevo renglon
            mayorFuturo=seleccionaMayor();
            System.out.println("El renglon seleccionado es :"+ renglonSeleccionado);
            //llenarlaNuevapoblacion
            nuevaPoblacion();
            //nuevos valores Decimales
            mostrarPesosNuevos();
            //comparar los cambios
            if(mayorActual<mayorFuturo){
                mayorActual=mayorFuturo;
                noCambio=0;
            }else{
                noCambio++;
            }
            if(noCambio>3){
                cambio=false;
            }
            System.out.println("El mayor es: "+mayorActual);
        }
        mostrarPoblaFin();
        jMaximo.setText(Integer.toString(mayorActual));
    }
    public int seleccionaMayor(){
        ArrayList<Integer> mayorV = new ArrayList();
        mayorV.add(P0);mayorV.add(P1);mayorV.add(P2);mayorV.add(P3);
        Collections.sort(mayorV);
        if(mayorV.get(3)==P0){
            renglonSeleccionado = (ArrayList<String>) pobini.get(0).clone();
            return P0;
        }else if(mayorV.get(3)==P1){
            renglonSeleccionado = (ArrayList<String>) pobini.get(1).clone();
            return P1;
        }else if(mayorV.get(3)==P2){
            renglonSeleccionado = (ArrayList<String>) pobini.get(2).clone();
            return P2;
        }else if(mayorV.get(3)==P3){
            renglonSeleccionado = (ArrayList<String>) pobini.get(3).clone();
            return P3;
        }
        return 0;
        
    }

    public void nuevaPoblacion(){
        int i=0;
        ArrayList<String> tmp;
        while(i<4){
            if(!pobini.get(i).equals(renglonSeleccionado)){
                tmp = (ArrayList<String>) pobini.clone();
                pobini.get(i).clear();
                heredaLlena(i,tmp);
            }
            i++;
        }
        for (int j = 0; j < 4; j++) {
             ArrayList<String> A;
            A = pobini.get(j);
            System.out.println("muestro a: "+A);
            
        }
       
    }
    
    public void heredaLlena(int i, ArrayList<String> tmp){
        //se colocan los demas
        //Para0
        pobini.get(i).add(crearIndividuoPobNuv(i));
        //Para2
        pobini.get(i).add(crearIndividuoPobNuv(i));
        //Para4
        pobini.get(i).add(crearIndividuoPobNuv(i));
        //Para5
        pobini.get(i).add(crearIndividuoPobNuv(i));
          //agrega los de herencia estatico 1,3
        pobini.get(i).add(1, renglonSeleccionado.get(1));
        pobini.get(i).add(4, renglonSeleccionado.get(4));
        
        
    }
    
    public String crearIndividuoPobNuv(int p) {
        Random dado = new Random();
        int pos = 0;
        for (int i = 0; i < 6; i++) {
            pos = dado.nextInt(6);
            if (pobini.get(p).contains(letras[pos])|| renglonSeleccionado.get(1).equals(letras[pos])||renglonSeleccionado.get(3).equals(letras[pos])){
                --i;
            } else {
                return letras[pos];
            }

        }
        return null;
    }
     public void mostrarPesosNuevos(){
        ArrayList<String> Particula = new ArrayList<>();
        ArrayList<ArrayList> binario = new ArrayList<>();
        
        for (int i = 0; i<4;i++){
            Particula = pobini.get(i);
            binario.add(calcularPesosC(Particula));            
        }
        P0=0;P1=0;P2=0;P3=0;
        for(int i=0;i<6;i++){
            
            P0=(int) (Math.pow((double) (int)(binario.get(0).get(i))*2,i+1)+P0);
            P1=(int) (Math.pow((double) (int)(binario.get(1).get(i))*2,i+1)+P1);
            P2=(int) (Math.pow((double) (int)(binario.get(2).get(i))*2,i+1)+P2);
            P3=(int) (Math.pow((double) (int)(binario.get(3).get(i))*2,i+1)+P3);
        }
        this.pn1.setText(Integer.toString(P0)); 
        this.pn2.setText(Integer.toString(P1));
        this.pn3.setText(Integer.toString(P2));
        this.pn4.setText(Integer.toString(P3));
    }
    public void mostrarPoblaFin() {
        ArrayList<String> A = new ArrayList<>();
        String a, b, c, d, e, f;
        int p;

        for (int i = 0; i < 4; i++) {
            A = pobini.get(i);
            a = A.get(0);
            b = A.get(1);
            c = A.get(2);
            d = A.get(3);
            e = A.get(4);
            f = A.get(5);
            p = i + 1;
            System.out.println("muestro a: "+A);
            Object datos[] = {p, a, b, c, d, e, f};
            modelo3.addRow(datos);
        }
    }
    
    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
        minimizar();
    }//GEN-LAST:event_jBSalirActionPerformed

    public void minimizar(){
             boolean cambio =true;
        int noCambio =0;
        pobini.clear();
        pobini = (ArrayList<ArrayList>) pobiniAux.clone();
        while(cambio){
            //seleccionar el nuevo renglon
            mayorFuturo=seleccionaMenor();
            System.out.println("El renglon seleccionado es :"+ renglonSeleccionado);
            //llenarlaNuevapoblacion
            nuevaPoblacion();
            //nuevos valores Decimales
            mostrarPesosNuevos();
            //comparar los cambios
            if(mayorActual>mayorFuturo){
                mayorActual=mayorFuturo;
                noCambio=0;
            }else{
                noCambio++;
            }
            if(noCambio>3){
                cambio=false;
            }
            System.out.println("El menor es: "+mayorActual);
        }
        mostrarPoblaFin();
        jMinimo.setText(Integer.toString(mayorActual));
    }
    public int seleccionaMenor(){
        ArrayList<Integer> mayorV = new ArrayList();
        mayorV.add(P0);mayorV.add(P1);mayorV.add(P2);mayorV.add(P3);
        Collections.sort(mayorV);
        if(mayorV.get(0)==P0){
            renglonSeleccionado = (ArrayList<String>) pobini.get(0).clone();
            return P0;
        }else if(mayorV.get(0)==P1){
            renglonSeleccionado = (ArrayList<String>) pobini.get(1).clone();
            return P1;
        }else if(mayorV.get(0)==P2){
            renglonSeleccionado = (ArrayList<String>) pobini.get(2).clone();
            return P2;
        }else if(mayorV.get(0)==P3){
            renglonSeleccionado = (ArrayList<String>) pobini.get(3).clone();
            return P3;
        }
        return 0;
        
    }
    
    private void jMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMinimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMinimoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCalcular;
    private javax.swing.JButton jBGenerar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jMaximo;
    private javax.swing.JTextField jMinimo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField p0;
    private javax.swing.JTextField p1;
    private javax.swing.JTextField p2;
    private javax.swing.JTextField p3;
    private javax.swing.JTextField pn1;
    private javax.swing.JTextField pn2;
    private javax.swing.JTextField pn3;
    private javax.swing.JTextField pn4;
    // End of variables declaration//GEN-END:variables
}
